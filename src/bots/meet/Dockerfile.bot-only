# Use the official Playwright Docker image as the base stage
FROM mcr.microsoft.com/playwright:v1.52.0-jammy AS base

# Install XVFB dependencies
RUN apt-get update && apt-get install -y \
    xvfb \
    ffmpeg \
    x11-utils \
    pulseaudio \
    x11-xserver-utils \
    fluxbox \
    && rm -rf /var/lib/apt/lists/*

# Set the working directory inside the container
WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm

# Copy dependency files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY src/bots/meet/package.json src/bots/meet/pnpm-lock.yaml src/bots/meet/entrypoint.sh ./meet/

# Convert entrypoint.sh to use Unix line endings
RUN sed -i 's/\r$//' ./meet/entrypoint.sh

# Install dependencies
RUN pnpm install

# Install Playwright dependencies
RUN pnpm dlx playwright@1.52.0 install-deps

# Install Playwright browsers
RUN pnpm dlx playwright@1.52.0 install --with-deps

# Ensure the Playwright cache directory has the correct permissions
RUN mkdir -p /root/ms-playwright && chmod -R 777 /root/ms-playwright

# ======================================================
# Runtime stage
FROM mcr.microsoft.com/playwright:v1.52.0-jammy AS runtime

# Set the working directory inside the container
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    xvfb \
    pulseaudio \
    pulseaudio-utils \
    xserver-xephyr \
    x11-xserver-utils \
    fluxbox \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Install pnpm globally
RUN npm install -g pnpm

# Copy node_modules and package.json from the base stage
COPY --from=base /app/node_modules /app/node_modules
COPY --from=base /app/package.json /app/package.json
COPY --from=base /app/pnpm-workspace.yaml /app/pnpm-workspace.yaml
COPY --from=base /app/meet/package.json /app/meet/package.json
COPY --from=base /app/meet/pnpm-lock.yaml /app/meet/pnpm-lock.yaml
COPY --from=base /root/ms-playwright /root/ms-playwright

# Copy working files into the container
COPY src ./src
COPY src/bots/meet/src ./meet/src

# Create a simple entrypoint that just runs the bot
RUN echo '#!/bin/bash\n\
echo "[entrypoint] Setting up XDG_RUNTIME_DIR..."\n\
export XDG_RUNTIME_DIR=/tmp/runtime-$USER\n\
mkdir -p $XDG_RUNTIME_DIR\n\
chmod 700 $XDG_RUNTIME_DIR\n\
\n\
echo "[entrypoint] Starting virtual display..."\n\
Xvfb :99 -screen 0 1920x1080x24 &\n\
\n\
echo "[entrypoint] Starting window manager..."\n\
fluxbox &\n\
\n\
echo "[entrypoint] Starting PulseAudio..."\n\
pulseaudio -D --exit-idle-time=-1\n\
\n\
# Give a few seconds for everything to warm up\n\
sleep 2\n\
\n\
echo "[entrypoint] Starting bot..."\n\
cd /app && node src/index.js\n\
' > /app/entrypoint.sh

# Create non-root user
RUN useradd -ms /bin/bash meetbot && chown -R meetbot:meetbot /app
RUN chown -R meetbot:meetbot /root/ms-playwright

# Expose display port
ENV DISPLAY=:99

# Switch to meetbot user
USER meetbot

# Make entrypoint executable
RUN chmod +x /app/entrypoint.sh

# Start the bot
CMD ["/app/entrypoint.sh"]


